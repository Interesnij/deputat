# Generated by Django 2.2.16 on 2020-10-23 17:10

import ckeditor_uploader.fields
from django.conf import settings
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('lists', '0001_initial'),
        ('elect', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('image', imagekit.models.fields.ProcessedImageField(blank=True, upload_to='blog/%Y/%m/%d/', verbose_name='Главное изображение')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('description', models.CharField(blank=True, max_length=500, verbose_name='Описание')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('comments_enabled', models.BooleanField(default=True, verbose_name='Разрешить комментарии')),
                ('votes_on', models.BooleanField(default=True, verbose_name='Реакции разрешены')),
                ('category', models.ManyToManyField(blank=True, related_name='blog_categories', to='lists.BlogCategory', verbose_name='Категория новостей проекта')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('elects', models.ManyToManyField(blank=True, related_name='elect', to='elect.Elect', verbose_name='Чиновник')),
            ],
            options={
                'verbose_name': 'Новость проекта',
                'verbose_name_plural': 'Новости проекта',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField(blank=True)),
                ('is_edited', models.BooleanField(default=False, verbose_name='Изменено')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удаено')),
                ('blog_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Blog')),
                ('commenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Комментатор')),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blog_comment_replies', to='blog.BlogComment', verbose_name='Родительский комментарий')),
            ],
            options={
                'verbose_name': 'комментарий к статье',
                'verbose_name_plural': 'комментарии к статье',
            },
        ),
        migrations.CreateModel(
            name='ElectNew',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('image', imagekit.models.fields.ProcessedImageField(blank=True, upload_to='blog/%Y/%m/%d/', verbose_name='Главное изображение')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('description', models.CharField(blank=True, max_length=500, verbose_name='Описание')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('category', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='new_category', to='elect.Elect', verbose_name='Категория')),
                ('elect', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='new_elect', to='elect.Elect', verbose_name='О ком эта новость')),
            ],
            options={
                'verbose_name': 'Новость проекта',
                'verbose_name_plural': 'Новости проекта',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='BlogVotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.IntegerField(choices=[(-1, 'Не нравится'), (1, 'Нравится')], default=0, verbose_name='Голос')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Blog')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='BlogCommentVotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.IntegerField(choices=[(-1, 'Не нравится'), (1, 'Нравится')], verbose_name='Голос')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.BlogComment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.AddIndex(
            model_name='electnew',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='blog_electn_created_cb7b2b_brin'),
        ),
        migrations.AddIndex(
            model_name='blogcomment',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='blog_blogco_created_6bdf8e_brin'),
        ),
        migrations.AddIndex(
            model_name='blog',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='blog_blog_created_a423be_brin'),
        ),
    ]
